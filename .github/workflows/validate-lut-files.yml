name: LUT file validation

on:
  pull_request:
    paths:
       - '**.csv.gz'
       - '.github/scripts/lut_validator/**'

permissions:
   pull-requests: write

jobs:
  validate-lut:
    name: Validate LUT CSV files
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        cd .github/scripts/lut_validator
        npm install
    - name: Validate LUT CSV files
      run: node .github/scripts/lut_validator/validate.js
  visualize:
    name: Add plot to PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/poetry-composite-action
        with:
          directory: './utils/visualize'
          python_version: '3.11'
          cache_dependencies: 'false'
      - uses: ankitjain28may/list-files-in-pr@v1.0
        id: list-files
        with:
          githubToken: ${{ github.token }}
          outputFormat: 'space-delimited'
      - run: |
          cd ./utils/visualize
          for file in ${{ steps.list-files.outputs.pullRequestFiles }}; do
            if [[ ${file} =~ \.csv\.gz$ ]];
            then
              echo "Generating plot for - ${file}."
              poetry run python plot.py "${{ github.workspace }}/${file}" --output=auto
            fi
          done
      - name: Upload the plots to Imgur
        uses: devicons/public-upload-to-imgur@v2
        id: imgur_step
        with:
          path: ./utils/visualize/*.png
          client_id: ${{secrets.IMGUR_CLIENT_ID}}
      - name: Build PR message
        id: build-pr-message
        run: |
          echo 'PR_MESSAGE<<EOF' >> $GITHUB_OUTPUT
          echo "Thank you for submitting light measurements!" >> $GITHUB_OUTPUT
          echo -e "Here are some visualizations for the CSV files.\n" >> $GITHUB_OUTPUT
          for url in ${{ join(fromJSON(steps.imgur_step.outputs.imgur_urls), ' ') }}
          do
            echo "![Image](${url})" >> $GITHUB_OUTPUT
          done
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Add comment to PR
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ${{ steps.build-pr-message.outputs.PR_MESSAGE }}
      - name: add label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: lightmodel
